# This Jamfile requires boost-build v2 to build.

import path ;
import modules ;
import os ;
import testing ;

BOOST_ROOT = [ modules.peek : BOOST_ROOT ] ;

ECHO "BOOST_ROOT =" $(BOOST_ROOT) ;
ECHO "OS =" [ os.name ] ;

if $(BOOST_ROOT)
{
	use-project /boost : $(BOOST_ROOT) ;
	alias boost_chrono : /boost/chrono//boost_chrono ;
	alias boost_system : /boost/system//boost_system ;
}
else
{

	local boost-lib-search-path =
		<search>/opt/local/lib
		<search>/usr/lib
		<search>/usr/local/lib
		<search>/sw/lib
		<search>/usr/g++/lib
		;

	local boost-include-path =
		<include>/opt/local/include
		<include>/usr/local/include
		<include>/usr/sfw/include
	;

	lib boost_chrono : : <name>boost_chrono $(boost-lib-search-path)
		: : $(boost-include-path) ;

	lib boost_system : : <name>boost_system $(boost-lib-search-path)
		: : $(boost-include-path) ;
}

SOURCES =
	simulator
	simulation
	io_service
	high_resolution_timer
	high_resolution_clock
	tcp_socket
	udp_socket
	socket_base
	queue
	acceptor
	default_config
	http_server
	;

lib simulator
	: # sources
	src/$(SOURCES).cpp

	: # requirements
	<include>include
	<library>boost_chrono
	<library>boost_system

	<link>shared:<define>SIMULATOR_BUILDING_SHARED

	# disable auto-link
	<define>BOOST_ALL_NO_LIB

	: # default build

	: # usage requirements
	<include>include
	<link>shared:<define>SIMULATOR_LINKING_SHARED
	;

project
	: requirements
	<library>simulator
	: default-build
	<link>static
	;

test-suite simulator-tests :
	[ run test/timer.cpp ]
	[ run test/acceptor.cpp ]
	[ run test/multi_accept.cpp ]
	[ run test/null_buffers.cpp ]
	[ run test/udp_socket.cpp ]
	;

